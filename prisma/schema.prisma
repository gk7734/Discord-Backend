// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  nickname     String
  username     String     @unique
  password     String
  description  String?
  avatar_url   String?
  pronoun      String?
  phone        String?
  birth        DateTime
  role         Role       @default(User)
  promo        Boolean    @default(false)
  status       UserStatus @default(Online)
  join_date    DateTime   @default(now())
  update_date  DateTime   @updatedAt
  friendsAdded Friend[]   @relation("UserFriends")
  friendOf     Friend[]   @relation("FriendOfUser")
}

model Friend {
  id        Int          @id @default(autoincrement())
  user      User         @relation("UserFriends", fields: [userId], references: [id])
  userId    String
  friend    User         @relation("FriendOfUser", fields: [friendId], references: [id])
  friendId  String
  status    FriendStatus @default(Pending)
  createdAt DateTime     @default(now())

  @@unique([userId, friendId])
}

enum Role {
  Admin
  User
  Developer
}

enum UserStatus {
  Online
  Idle
  DoNotDisturb
  Invisible
}

enum FriendStatus {
  Pending
  Accepted
  Declined
  Blocked
}
